---
# Tasks for tesing role

- name: test docker_sandbox role
  hosts: localhost
  roles:
    - role: docker_presets
    - role: docker_sandbox
      docker_sandbox_state: started
  tasks:
    - name: assert that idempotence test was ok
      assert:
        that: not docker_sandbox_idempotence_result | failed

- name: create file for tesing
  hosts: docker_sandbox_containers
  tasks:
    - name: create testing file
      copy:
        content: ""
        dest: /tmp/emptyfile
        force: no
  tags:
    - idempotence

- name: test enabling docker containers restart after running idempotence test
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_state: restarted
      docker_sandbox_idempotence_test_restart_after: true

- name: test docker containers restart after running idempotence test
  hosts: docker_sandbox_containers
  tasks:
    - name: check /tmp/emptyfile file
      stat:
        path: /tmp/emptyfile
      register: check_emptyfile_result

    - name: check emptyfile file does not exist
      assert:
        that: not check_emptyfile_result.stat.exists

- name: test disabling docker containers restart after running idempotence test
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_state: restarted
      docker_sandbox_idempotence_test_restart_after: false

- name: test docker containers does not restart after running idempotence test
  hosts: docker_sandbox_containers
  tasks:
    - name: check /tmp/emptyfile file
      stat:
        path: /tmp/emptyfile
      register: check_emptyfile_result

    - name: check /tmp/emptyfile file does not exist
      assert:
        that: check_emptyfile_result.stat.exists

- name: test cleanup by ppid
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_cleanup_by_ppid: true
      docker_sandbox_cleanup_by_user: false
      docker_sandbox_cleanup_by_playbook: false
  tasks:
    - name: search running docker containers created by the test
      shell: >-
        docker ps -a --format='{''{.Names}''}'
        --filter label=docker_sandbox_ppid={{ lookup(
          'pipe',
          'ps -o ppid= -p `ps -o ppid= -p $PPID`')
          | trim }}
      changed_when: false
      register: search_test_containers_result

    - name: verify only running docker containers are the last ones created
      assert:
       that: item in docker_sandbox_containers | map(attribute='name') | list
      with_items: "{{ search_test_containers_result.stdout_lines }}"

- name: test cleanup by user
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_cleanup_by_ppid: false
      docker_sandbox_cleanup_by_user: true
      docker_sandbox_cleanup_by_playbook: false
  tasks:
    - name: search running docker containers created by the test
      shell: >-
        docker ps -a --format='{''{.Names}''}'
        --filter label=docker_sandbox_ppid={{ lookup(
          'pipe',
          'ps -o ppid= -p `ps -o ppid= -p $PPID`')
          | trim }}
      changed_when: false
      register: search_test_containers_result

    - name: verify only running docker containers are the last ones created
      assert:
       that: item in docker_sandbox_containers | map(attribute='name') | list
      with_items: "{{ search_test_containers_result.stdout_lines }}"

- name: test cleanup by playbook
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_cleanup_by_ppid: false
      docker_sandbox_cleanup_by_user: false
      docker_sandbox_cleanup_by_playbook: true
  tasks:
    - name: search running docker containers created by the test
      shell: >-
        docker ps -a --format='{''{.Names}''}'
        --filter label=docker_sandbox_ppid={{ lookup(
          'pipe',
          'ps -o ppid= -p `ps -o ppid= -p $PPID`')
          | trim }}
      changed_when: false
      register: search_test_containers_result

    - name: verify only running docker containers are the last ones created
      assert:
       that: item in docker_sandbox_containers | map(attribute='name') | list
      with_items: "{{ search_test_containers_result.stdout_lines }}"

- name: cleanup docker docker sandbox
  hosts: localhost
  roles:
    - role: docker_sandbox
      docker_sandbox_state: absent
